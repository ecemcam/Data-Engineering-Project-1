{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.11.0b3", "generated_at": "2025-10-17T21:10:40.966014Z", "invocation_id": "9cf0d075-08b7-4c99-9c79-2f9a1d01b47f", "invocation_started_at": "2025-10-17T21:10:23.730800Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-17T21:10:31.593005Z", "completed_at": "2025-10-17T21:10:31.805835Z"}, {"name": "execute", "started_at": "2025-10-17T21:10:31.882823Z", "completed_at": "2025-10-17T21:10:34.674623Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.176088333129883, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "data-pipeline-project-474812", "job_id": "29df5d1c-0688-4935-a028-f11aed16156e", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.data_pipeline_project.stg_addresses", "compiled": true, "compiled_code": "with source as (\n\n    select * from `data-pipeline-project-474812`.`raw_data`.`addresses`\n\n)\n\nselect distinct\n    -- Primary Key\n    _id as address_id,\n    \n    -- Foreign Keys (Geographical and User Links)\n    _city as city_id,\n    _state as state_id,\n    _country as country_id,\n    _user as user_id, \n    _neighborhood as neighborhood_id, -- Maps to the neighborhood table ID\n    \n    -- Attributes\n    invoiceType as invoice_type\n\nfrom source\nwhere _id is not null", "relation_name": "`data-pipeline-project-474812`.`analytics_staging_staging`.`stg_addresses`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-17T21:10:31.577717Z", "completed_at": "2025-10-17T21:10:31.692989Z"}, {"name": "execute", "started_at": "2025-10-17T21:10:31.702615Z", "completed_at": "2025-10-17T21:10:34.716857Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 3.1821513175964355, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "data-pipeline-project-474812", "job_id": "58fae8f8-35d1-4f0d-b253-53381cd06f9b", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.data_pipeline_project.stg_cities", "compiled": true, "compiled_code": "with source as (\n\n    select * from `data-pipeline-project-474812`.`raw_data`.`cities`\n\n)\n\nselect distinct\n    -- Primary Key\n    _id as city_id,\n    \n    -- Foreign Keys\n    _state as state_id,\n    _country as country_id,\n    \n    -- Attributes\n    name as city_name\n\nfrom source\nwhere _id is not null", "relation_name": "`data-pipeline-project-474812`.`analytics_staging_staging`.`stg_cities`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-17T21:10:31.824155Z", "completed_at": "2025-10-17T21:10:31.946681Z"}, {"name": "execute", "started_at": "2025-10-17T21:10:31.958205Z", "completed_at": "2025-10-17T21:10:34.736206Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 3.0667707920074463, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "data-pipeline-project-474812", "job_id": "39d3126d-8bc5-43fd-9c8f-eae92ebf7c8c", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.data_pipeline_project.stg_countries", "compiled": true, "compiled_code": "with source as (\n\n    select * from `data-pipeline-project-474812`.`raw_data`.`countries`\n\n)\n\nselect distinct\n    -- Primary Key: Standardize to country_id\n    _id as country_id,\n    \n    -- Attributes\n    name as country_name\n\nfrom source\nwhere _id is not null", "relation_name": "`data-pipeline-project-474812`.`analytics_staging_staging`.`stg_countries`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-17T21:10:31.632122Z", "completed_at": "2025-10-17T21:10:31.699663Z"}, {"name": "execute", "started_at": "2025-10-17T21:10:31.708891Z", "completed_at": "2025-10-17T21:10:34.747841Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 3.193983554840088, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "data-pipeline-project-474812", "job_id": "9edac689-189e-4611-9546-07447c2b344e", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.data_pipeline_project.stg_marketing_spend", "compiled": true, "compiled_code": "with source as (\n\n    select * from `data-pipeline-project-474812`.`raw_data`.`marketing_spend`\n\n),\n\nunpivot_spend as (\n\n    -- Manual UNPIVOT for each date column\n    select\n        channel as marketing_channel,\n        '2025-09-20' as spend_date_raw,\n        cast(replace(`2025-09-20`, ',', '') as numeric) as spend_amount_try\n    from source\n    where `2025-09-20` is not null and cast(replace(`2025-09-20`, ',', '') as numeric) > 0\n\n    union all\n\n    select\n        channel as marketing_channel,\n        '2025-09-21' as spend_date_raw,\n        cast(replace(`2025-09-21`, ',', '') as numeric) as spend_amount_try\n    from source\n    where `2025-09-21` is not null and cast(replace(`2025-09-21`, ',', '') as numeric) > 0\n\n    union all\n\n    select\n        channel as marketing_channel,\n        '2025-09-22' as spend_date_raw,\n        cast(replace(`2025-09-22`, ',', '') as numeric) as spend_amount_try\n    from source\n    where `2025-09-22` is not null and cast(replace(`2025-09-22`, ',', '') as numeric) > 0\n\n    union all\n\n    select\n        channel as marketing_channel,\n        '2025-09-23' as spend_date_raw,\n        cast(replace(`2025-09-23`, ',', '') as numeric) as spend_amount_try\n    from source\n    where `2025-09-23` is not null and cast(replace(`2025-09-23`, ',', '') as numeric) > 0\n\n    union all\n\n    select\n        channel as marketing_channel,\n        '2025-09-24' as spend_date_raw,\n        cast(replace(`2025-09-24`, ',', '') as numeric) as spend_amount_try\n    from source\n    where `2025-09-24` is not null and cast(replace(`2025-09-24`, ',', '') as numeric) > 0\n\n    union all\n\n    select\n        channel as marketing_channel,\n        '2025-09-25' as spend_date_raw,\n        cast(replace(`2025-09-25`, ',', '') as numeric) as spend_amount_try\n    from source\n    where `2025-09-25` is not null and cast(replace(`2025-09-25`, ',', '') as numeric) > 0\n\n    union all\n\n    select\n        channel as marketing_channel,\n        '2025-09-26' as spend_date_raw,\n        cast(replace(`2025-09-26`, ',', '') as numeric) as spend_amount_try\n    from source\n    where `2025-09-26` is not null and cast(replace(`2025-09-26`, ',', '') as numeric) > 0\n\n    union all\n\n    select\n        channel as marketing_channel,\n        '2025-09-27' as spend_date_raw,\n        cast(replace(`2025-09-27`, ',', '') as numeric) as spend_amount_try\n    from source\n    where `2025-09-27` is not null and cast(replace(`2025-09-27`, ',', '') as numeric) > 0\n\n),\n\nfinal_conversion as (\n\n    select\n        parse_date('%Y-%m-%d', spend_date_raw) as spend_date,\n        marketing_channel,\n        spend_amount_try\n    \n    from unpivot_spend\n\n)\n\nselect * from final_conversion", "relation_name": "`data-pipeline-project-474812`.`analytics_staging_staging`.`stg_marketing_spend`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-17T21:10:34.930608Z", "completed_at": "2025-10-17T21:10:34.944672Z"}, {"name": "execute", "started_at": "2025-10-17T21:10:34.962082Z", "completed_at": "2025-10-17T21:10:37.118115Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 2.2126870155334473, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "data-pipeline-project-474812", "job_id": "7827784f-025d-4708-83d9-ebdd31c3469c", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.data_pipeline_project.stg_states", "compiled": true, "compiled_code": "with source as (\n\n    select * from `data-pipeline-project-474812`.`raw_data`.`states`\n\n)\n\nselect distinct\n    -- Primary Key\n    _id as state_id,\n    \n    -- Foreign Key (to countries)\n    _country as country_id,\n    \n    -- Attributes\n    name as state_name\n\nfrom source\nwhere _id is not null", "relation_name": "`data-pipeline-project-474812`.`analytics_staging_staging`.`stg_states`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-17T21:10:34.899598Z", "completed_at": "2025-10-17T21:10:34.959309Z"}, {"name": "execute", "started_at": "2025-10-17T21:10:34.978902Z", "completed_at": "2025-10-17T21:10:37.802224Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.960425853729248, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "data-pipeline-project-474812", "job_id": "d6dbc447-fa37-4761-aca2-4bab762e6031", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.data_pipeline_project.stg_neighborhoods", "compiled": true, "compiled_code": "with source as (\n\n    select * from `data-pipeline-project-474812`.`raw_data`.`neighborhoods`\n\n)\n\nselect distinct\n    -- Primary Key\n    _id as neighborhood_id,\n    \n    -- Foreign Keys\n    _city as city_id,\n    _country as country_id,\n    \n    -- Attributes\n    name as neighborhood_name,\n    postalCode as postal_code\n\nfrom source\nwhere _id is not null", "relation_name": "`data-pipeline-project-474812`.`analytics_staging_staging`.`stg_neighborhoods`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-17T21:10:34.922102Z", "completed_at": "2025-10-17T21:10:34.968428Z"}, {"name": "execute", "started_at": "2025-10-17T21:10:34.996632Z", "completed_at": "2025-10-17T21:10:37.853660Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 3.043773889541626, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "data-pipeline-project-474812", "job_id": "b104c448-835b-4ccc-85b7-b6530b4d52b1", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.data_pipeline_project.stg_orders", "compiled": true, "compiled_code": "with source as (\n\n    select * from `data-pipeline-project-474812`.`raw_data`.`orders`\n\n),\n\nrenamed_and_cleaned as (\n\n    select\n\n        -- Deduplication logic: Prioritize the first record if an ID appears more than once\n        row_number() over (partition by _id order by createdAt asc) as rn,\n\n        -- Primary Key\n        _id as order_id,\n\n        -- Foreign Keys\n        _user as user_id,\n        _deliveryAddress as delivery_address_id,\n        _invoiceAddress as invoice_address_id,\n\n        -- Standardized Timestamps\n        cast(createdAt as timestamp) as created_at,\n\n        -- Metrics: JSON Extraction\n        -- Extract the final charged amount (in TRY, as confirmed)\n        cast(json_extract_scalar(price, '$.chargedAmount') as numeric) as charged_amount_try,\n        \n        -- Attributes\n        status as order_status,\n\n        -- Complex/JSON Fields (Selected as raw strings)\n        price as price_data,\n        oneTimePurchase as one_time_purchase_data,\n        subscriptions as subscription_data\n\n    from source\n    where _id is not null\n    -- Simple cleaning: Filter out records where we cannot extract a charged amount\n    and json_extract_scalar(price, '$.chargedAmount') is not null\n    and cast(json_extract_scalar(price, '$.chargedAmount') as numeric) > 0\n\n)\n\nselect \n    order_id,\n    user_id,\n    delivery_address_id,\n    invoice_address_id,\n    created_at,\n    charged_amount_try,\n    order_status,\n    price_data,\n    one_time_purchase_data,\n    subscription_data\nfrom renamed_and_cleaned\n-- Final selection: ONLY select the single, canonical record (rn = 1)\nwhere rn = 1", "relation_name": "`data-pipeline-project-474812`.`analytics_staging_staging`.`stg_orders`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-17T21:10:34.871059Z", "completed_at": "2025-10-17T21:10:34.948673Z"}, {"name": "execute", "started_at": "2025-10-17T21:10:34.970123Z", "completed_at": "2025-10-17T21:10:38.289039Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 3.4592185020446777, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "data-pipeline-project-474812", "job_id": "e7005ad7-3d3b-4024-8128-1d6955291359", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.data_pipeline_project.stg_shipments", "compiled": true, "compiled_code": "with source as (\n\n    select * from `data-pipeline-project-474812`.`raw_data`.`shipments`\n\n),\n\nrenamed_and_cleaned as (\n\n    select\n\n        -- Deduplication logic: Prioritize the latest record (newest created_at, if available, otherwise just use a distinct ID)\n        -- Since this table is likely event-based, we prioritize the latest row for any given ID.\n        row_number() over (partition by _id order by collectDate desc) as rn,\n\n        -- Primary Key\n        _id as shipment_id,\n\n        -- Foreign Keys\n        _order as order_id,\n        _user as user_id,\n\n        -- Standardized Timestamps\n        -- Assuming 'createdAt' still exists as a standard column for the record's creation time\n        cast(collectDate as timestamp) as collected_at,\n\n        -- Complex/JSON Fields (Selected as raw strings for later parsing in Intermediate models)\n        details as details_json,\n        label as label_json\n\n    from source\n    where _id is not null\n    and _order is not null -- Ensure the shipment links to a valid order\n)\n\nselect\n    shipment_id,\n    order_id,\n    user_id,\n    collected_at,\n    details_json,\n    label_json\nfrom renamed_and_cleaned\n-- Final selection: only include the latest, unique instance\nwhere rn = 1", "relation_name": "`data-pipeline-project-474812`.`analytics_staging_staging`.`stg_shipments`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-17T21:10:37.150000Z", "completed_at": "2025-10-17T21:10:37.160123Z"}, {"name": "execute", "started_at": "2025-10-17T21:10:37.161559Z", "completed_at": "2025-10-17T21:10:39.959496Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 2.8360698223114014, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "data-pipeline-project-474812", "job_id": "0436094a-e027-4c7c-92f1-e5122400c76c", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.data_pipeline_project.stg_subscriptions", "compiled": true, "compiled_code": "with source as (\n\n    select * from `data-pipeline-project-474812`.`raw_data`.`subscriptions`\n\n),\n\nrenamed_and_cleaned as (\n\n    select\n\n        -- Deduplication logic: Prioritize the latest record (newest created_at)\n        row_number() over (partition by _id order by createdAt desc) as rn,\n\n        -- Primary Key\n        _id as subscription_id,\n\n        -- Foreign Key\n        _user as user_id,\n\n        -- Standardized Timestamps\n        cast(createdAt as timestamp) as created_at,\n        cast(nextOrderDate as timestamp) as next_order_date,\n        cast(startDate as timestamp) as start_date,\n\n        -- Metrics\n        cast(totalQuantity as integer) as total_quantity,\n\n        -- Flags (Casting to BOOLEAN for clean usage)\n        cast(isActive as boolean) as is_active,\n        cast(isSkip as boolean) as is_skip,\n\n        -- Complex/JSON Field (Selected as raw string for later parsing)\n        products as products_data\n\n    from source\n    where _id is not null\n    -- Simple cleaning: Ensure start_date and quantity are valid\n    and startDate is not null\n    and totalQuantity is not null and totalQuantity >= 0\n)\n\nselect\n    subscription_id,\n    user_id,\n    created_at,\n    next_order_date,\n    start_date,\n    total_quantity,\n    is_active,\n    is_skip,\n    products_data\nfrom renamed_and_cleaned\n-- Final selection: only include the latest, unique instance\nwhere rn = 1", "relation_name": "`data-pipeline-project-474812`.`analytics_staging_staging`.`stg_subscriptions`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-17T21:10:37.874490Z", "completed_at": "2025-10-17T21:10:37.912268Z"}, {"name": "execute", "started_at": "2025-10-17T21:10:37.918554Z", "completed_at": "2025-10-17T21:10:40.599823Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.757852077484131, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "data-pipeline-project-474812", "job_id": "c5838133-f788-4609-ae58-2e35ec966e41", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.data_pipeline_project.stg_users", "compiled": true, "compiled_code": "with source as (\n\n    select * from `data-pipeline-project-474812`.`raw_data`.`users`\n\n),\n\n-- Get the earliest subscription date for each user\nsubscription_dates as (\n    select\n        _user as user_id,\n        min(cast(createdAt as timestamp)) as first_subscription_date\n    from `data-pipeline-project-474812`.`raw_data`.`subscriptions`\n    where _user is not null\n    group by 1\n),\n\nrenamed_and_cleaned as (\n\n    select\n\n        -- Primary Key: Standardized to user_id\n        _id as user_id,\n\n        -- SMART TIMESTAMP LOGIC: Use subscription date as fallback for missing created_at\n        cast(\n            case \n                when u.createdAt is not null then u.createdAt\n                else s.first_subscription_date  -- Fallback to first subscription date\n            end as timestamp\n        ) as created_at,\n        \n        -- Deduplication logic: Assign a row number based on the creation time\n        row_number() over (partition by _id order by \n            case \n                when u.createdAt is not null then u.createdAt\n                else s.first_subscription_date \n            end desc\n        ) as rn\n\n    from source u\n    left join subscription_dates s on u._id = s.user_id\n    -- Simple cleaning: ensure that _id column is not null\n    where _id is not null\n)\n\nselect\n    user_id,\n    created_at\n\nfrom renamed_and_cleaned\n-- Final selection: only include the latest, unique instance of a user_id\nwhere rn = 1", "relation_name": "`data-pipeline-project-474812`.`analytics_staging_staging`.`stg_users`", "batch_results": null}], "elapsed_time": 12.025283813476562, "args": {"printer_width": 80, "invocation_command": "dbt run --select staging", "source_freshness_run_project_hooks": true, "require_nested_cumulative_type_params": false, "use_fast_test_edges": false, "use_colors_file": true, "version_check": true, "populate_cache": true, "send_anonymous_usage_stats": true, "log_file_max_bytes": 10485760, "require_generic_test_arguments_property": true, "log_path": "/home/ecem/Desktop/data-pipeline-project/dbt/logs", "log_format": "default", "require_batched_execution_for_custom_microbatch_strategy": false, "use_colors": true, "partial_parse": true, "validate_macro_args": false, "log_level_file": "debug", "quiet": false, "show_resource_report": false, "show_all_deprecations": false, "cache_selected_only": false, "indirect_selection": "eager", "state_modified_compare_vars": false, "skip_nodes_if_on_run_start_fails": false, "require_resource_names_without_spaces": true, "which": "run", "project_dir": "/home/ecem/Desktop/data-pipeline-project/dbt", "exclude": [], "static_parser": true, "strict_mode": false, "upload_to_artifacts_ingest_api": false, "write_json": true, "defer": false, "vars": {}, "require_yaml_configuration_for_mf_time_spines": false, "require_explicit_package_overrides_for_builtin_materializations": true, "macro_debugging": false, "partial_parse_file_diff": true, "select": ["staging"], "log_level": "info", "state_modified_compare_more_unrendered_values": false, "log_format_file": "debug", "introspect": true, "empty": false, "warn_error_options": {"error": [], "warn": [], "silence": []}, "print": true, "favor_state": false, "require_all_warnings_handled_by_warn_error": false, "profiles_dir": "/home/ecem/.dbt"}}